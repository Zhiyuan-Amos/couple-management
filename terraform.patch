diff --git a/.github/workflows/terraform-create-resource.yml b/.github/workflows/terraform-create-resource.yml
new file mode 100644
index 0000000..ced04bb
--- /dev/null
+++ b/.github/workflows/terraform-create-resource.yml
@@ -0,0 +1,39 @@
+name: Terraform Create Azure Resource
+
+on:
+  push:
+    branches:
+      - master
+  pull_request:
+    branches: 
+      - master
+
+jobs:
+  terraform:
+    runs-on: ubuntu-latest
+    
+    env:
+      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
+      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
+      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
+      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
+      
+    steps:
+      - name: Checkout
+        uses: actions/checkout@v2
+
+      - name: Terraform Init
+        run: terraform init
+        working-directory: ./terraform/terraform-create-resource
+
+      - name: Terraform Validate
+        run: terraform validate 
+        working-directory: ./terraform/terraform-create-resource
+
+      - name: Terraform Plan
+        run: terraform plan
+        working-directory: ./terraform/terraform-create-resource
+
+      - name: Terraform Apply
+        run: terraform apply -auto-approve
+        working-directory: ./terraform/terraform-create-resource
diff --git a/.gitignore b/.gitignore
index b18efaa..5bb9714 100644
--- a/.gitignore
+++ b/.gitignore
@@ -362,4 +362,35 @@ MigrationBackup/
 .ionide/
 
 # Fody - auto-generated XML schema
-FodyWeavers.xsd
\ No newline at end of file
+FodyWeavers.xsd
+
+# Local .terraform directories
+**/.terraform/*
+
+# .tfstate files
+*.tfstate
+*.tfstate.*
+
+# Crash log files
+crash.log
+
+# Exclude all .tfvars files, which are likely to contain sentitive data, such as
+# password, private keys, and other secrets. These should not be part of version
+# control as they are data points which are potentially sensitive and subject
+# to change depending on the environment.
+#
+*.tfvars
+
+# Ignore override files as they are usually used to override resources locally and so
+# are not checked in
+override.tf
+override.tf.json
+*_override.tf
+*_override.tf.json
+
+# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
+*tfplan*
+
+# Ignore CLI configuration files
+.terraformrc
+terraform.rc
\ No newline at end of file
diff --git a/terraform/terraform-create-resource/.terraform.lock.hcl b/terraform/terraform-create-resource/.terraform.lock.hcl
new file mode 100644
index 0000000..27e76b0
--- /dev/null
+++ b/terraform/terraform-create-resource/.terraform.lock.hcl
@@ -0,0 +1,39 @@
+# This file is maintained automatically by "terraform init".
+# Manual edits may be lost in future updates.
+
+provider "registry.terraform.io/hashicorp/azurerm" {
+  version     = "2.84.0"
+  constraints = "~> 2.84.0"
+  hashes = [
+    "h1:jyvuROvM/4pyDA61Gq6F9pc3c0ofhgo22XEnlWwjxnE=",
+    "zh:172f9abac9765cd4412d192fbc33ce29ef45dde7865844d246d9a645e8bf52d1",
+    "zh:1b92d4262852169bcd1c7766047af5b5bdb64bd05d4be69dfa5078b83e0d5b30",
+    "zh:391fbe77d483120ed7954d4c88ed8d6668dad807f2b4dc8f4faeaffebcf83b49",
+    "zh:5623276a8e011b7275c0f3922ac3aab0659145fcfde4bb336dfa70150b4f5630",
+    "zh:6a8f73947379b9aed2f725ba5435210b1911339ccff925fe6d0c89125d3f0d7a",
+    "zh:89bac435268a41311559ee556ef4bc10a4d4d2ff0bcdbb38d4faf70cb5703600",
+    "zh:a672d23d1e937de9796971372f47dc0938f28764396b87595d0a2241fd9fefe3",
+    "zh:cebaaa78cec7fd9aedf56445931e0e3bfbbf5d75eedf8c2da5c6026819611eee",
+    "zh:e17b79121500fd70e226bd34a45b6fdb9d8699e41896fb3d57c66890fad54ae5",
+    "zh:ec2b5d259c1cd71b6f8401c6e2cc80229d04bb525c9e0561591c4d03683e241b",
+    "zh:f9a9011f0a076084511e1602d021bc5e1fb2465cf51e5b2037687a0bba31f811",
+  ]
+}
+
+provider "registry.terraform.io/hashicorp/random" {
+  version = "3.1.0"
+  hashes = [
+    "h1:rKYu5ZUbXwrLG1w81k7H3nce/Ys6yAxXhWcbtk36HjY=",
+    "zh:2bbb3339f0643b5daa07480ef4397bd23a79963cc364cdfbb4e86354cb7725bc",
+    "zh:3cd456047805bf639fbf2c761b1848880ea703a054f76db51852008b11008626",
+    "zh:4f251b0eda5bb5e3dc26ea4400dba200018213654b69b4a5f96abee815b4f5ff",
+    "zh:7011332745ea061e517fe1319bd6c75054a314155cb2c1199a5b01fe1889a7e2",
+    "zh:738ed82858317ccc246691c8b85995bc125ac3b4143043219bd0437adc56c992",
+    "zh:7dbe52fac7bb21227acd7529b487511c91f4107db9cc4414f50d04ffc3cab427",
+    "zh:a3a9251fb15f93e4cfc1789800fc2d7414bbc18944ad4c5c98f466e6477c42bc",
+    "zh:a543ec1a3a8c20635cf374110bd2f87c07374cf2c50617eee2c669b3ceeeaa9f",
+    "zh:d9ab41d556a48bd7059f0810cf020500635bfc696c9fc3adab5ea8915c1d886b",
+    "zh:d9e13427a7d011dbd654e591b0337e6074eef8c3b9bb11b2e39eaaf257044fd7",
+    "zh:f7605bd1437752114baf601bdf6931debe6dc6bfe3006eb7e9bb9080931dca8a",
+  ]
+}
diff --git a/terraform/terraform-create-resource/cosmosdb.tf b/terraform/terraform-create-resource/cosmosdb.tf
new file mode 100644
index 0000000..7504e93
--- /dev/null
+++ b/terraform/terraform-create-resource/cosmosdb.tf
@@ -0,0 +1,43 @@
+# azurerm_cosmosdb_account.db:
+resource "azurerm_cosmosdb_account" "db" {
+    access_key_metadata_writes_enabled    = true
+    analytical_storage_enabled            = false
+    enable_automatic_failover             = false
+    # Only one free tier cosmosDB per subscription
+    # enable_free_tier                      = true
+    enable_multiple_write_locations       = false
+    is_virtual_network_filter_enabled     = false
+    kind                                  = "GlobalDocumentDB"
+    local_authentication_disabled         = false
+    location                              = "southeastasia"
+    name                                  = "${var.prefix}-couple-management-storage"
+    network_acl_bypass_for_azure_services = false
+    network_acl_bypass_ids                = []
+    offer_type                            = "Standard"
+    public_network_access_enabled         = true
+    resource_group_name                   = azurerm_resource_group.rg.name
+
+    capabilities {
+    name = "EnableServerless"
+    }
+
+    backup {
+        interval_in_minutes = 240
+        retention_in_hours  = 8
+        type                = "Periodic"
+    }
+
+    consistency_policy {
+        consistency_level       = "ConsistentPrefix"
+        max_interval_in_seconds = 5
+        max_staleness_prefix    = 100
+    }
+
+    geo_location {
+        failover_priority = 0
+        location          = "southeastasia"
+        zone_redundant    = false
+    }
+
+    timeouts {}
+}
\ No newline at end of file
diff --git a/terraform/terraform-create-resource/functionapp.tf b/terraform/terraform-create-resource/functionapp.tf
new file mode 100644
index 0000000..d91ff15
--- /dev/null
+++ b/terraform/terraform-create-resource/functionapp.tf
@@ -0,0 +1,30 @@
+resource "azurerm_app_service_plan" "asp" {
+  name                = "${var.prefix}-service-plan"
+  location            = azurerm_resource_group.rg.location
+  resource_group_name = azurerm_resource_group.rg.name
+  kind                = "FunctionApp"
+
+  sku {
+    tier = "Dynamic"
+    size = "Y1"
+  }
+}
+
+resource "azurerm_function_app" "fa" {
+  name                       = "${var.prefix}-change-event"
+  location                   = azurerm_resource_group.rg.location
+  resource_group_name        = azurerm_resource_group.rg.name
+  app_service_plan_id        = azurerm_app_service_plan.asp.id
+  storage_account_name       = azurerm_storage_account.storage.name
+  storage_account_access_key = azurerm_storage_account.storage.primary_access_key
+
+  app_settings = {
+    "AccountEndpoint"           = azurerm_cosmosdb_account.db.endpoint
+    "AccountKey"                = azurerm_cosmosdb_account.db.primary_key
+    "DatabaseConnectionString"  = azurerm_cosmosdb_account.db.connection_strings[0]
+    "DatabaseName"              = "database"
+    "ImagesConnectionString"    = "DefaultEndpointsProtocol=https;AccountName=${azurerm_storage_account.storage.name};AccountKey=${azurerm_storage_account.storage.primary_access_key};EndpointSuffix=core.windows.net"
+    "FUNCTIONS_WORKER_RUNTIME"  = "dotnet"
+    "WEBSITE_RUN_FROM_PACKAGE"  = "1"
+  }
+}
\ No newline at end of file
diff --git a/terraform/terraform-create-resource/main.tf b/terraform/terraform-create-resource/main.tf
new file mode 100644
index 0000000..dc76eaa
--- /dev/null
+++ b/terraform/terraform-create-resource/main.tf
@@ -0,0 +1,29 @@
+terraform {
+  required_version = ">=0.12"
+  required_providers {
+    azurerm = {
+      source = "hashicorp/azurerm"
+      version = "~>2.84.0"
+    }
+  }
+
+  backend "azurerm" {
+        resource_group_name  = "StateResource"
+        storage_account_name = "couplemgmtstates"
+        container_name       = "tfstates"
+        key                  = "test.terraform.tfstate"
+    }
+}
+
+resource "random_uuid" "test" {
+}
+
+resource "azurerm_resource_group" "rg" {
+  name      = "${random_uuid.test.result}-rg-${var.prefix}"
+  location  = var.location
+}
+
+provider "azurerm" {
+  features {}
+}
+
diff --git a/terraform/terraform-create-resource/storage.tf b/terraform/terraform-create-resource/storage.tf
new file mode 100644
index 0000000..0af7305
--- /dev/null
+++ b/terraform/terraform-create-resource/storage.tf
@@ -0,0 +1,14 @@
+resource "azurerm_storage_account" "storage" {
+  name                      = "${var.prefix}couplemgmtstorage"
+  resource_group_name       = azurerm_resource_group.rg.name
+  location                  = "southeastasia"
+  account_tier              = "Standard"
+  account_replication_type  = "LRS"
+  allow_blob_public_access  = true
+}
+
+resource "azurerm_storage_container" "images" {
+  name                  = "images"
+  storage_account_name  = azurerm_storage_account.storage.name
+  container_access_type = "private"
+}
diff --git a/terraform/terraform-create-resource/variables.tf b/terraform/terraform-create-resource/variables.tf
new file mode 100644
index 0000000..7a57d5b
--- /dev/null
+++ b/terraform/terraform-create-resource/variables.tf
@@ -0,0 +1,11 @@
+variable "prefix" {
+  default       = "test"
+}
+
+
+# Shortnames for regions can be found here:
+# https://github.com/claranet/terraform-azurerm-regions/blob/master/REGIONS.md
+variable "location" {
+  default = "southeastasia"
+  description   = "Location of the resource group."
+}
\ No newline at end of file
diff --git a/terraform/terraform-remote-state/.terraform.lock.hcl b/terraform/terraform-remote-state/.terraform.lock.hcl
new file mode 100644
index 0000000..72d84f3
--- /dev/null
+++ b/terraform/terraform-remote-state/.terraform.lock.hcl
@@ -0,0 +1,39 @@
+# This file is maintained automatically by "terraform init".
+# Manual edits may be lost in future updates.
+
+provider "registry.terraform.io/hashicorp/azurerm" {
+  version     = "2.84.0"
+  constraints = "~> 2.0"
+  hashes = [
+    "h1:jyvuROvM/4pyDA61Gq6F9pc3c0ofhgo22XEnlWwjxnE=",
+    "zh:172f9abac9765cd4412d192fbc33ce29ef45dde7865844d246d9a645e8bf52d1",
+    "zh:1b92d4262852169bcd1c7766047af5b5bdb64bd05d4be69dfa5078b83e0d5b30",
+    "zh:391fbe77d483120ed7954d4c88ed8d6668dad807f2b4dc8f4faeaffebcf83b49",
+    "zh:5623276a8e011b7275c0f3922ac3aab0659145fcfde4bb336dfa70150b4f5630",
+    "zh:6a8f73947379b9aed2f725ba5435210b1911339ccff925fe6d0c89125d3f0d7a",
+    "zh:89bac435268a41311559ee556ef4bc10a4d4d2ff0bcdbb38d4faf70cb5703600",
+    "zh:a672d23d1e937de9796971372f47dc0938f28764396b87595d0a2241fd9fefe3",
+    "zh:cebaaa78cec7fd9aedf56445931e0e3bfbbf5d75eedf8c2da5c6026819611eee",
+    "zh:e17b79121500fd70e226bd34a45b6fdb9d8699e41896fb3d57c66890fad54ae5",
+    "zh:ec2b5d259c1cd71b6f8401c6e2cc80229d04bb525c9e0561591c4d03683e241b",
+    "zh:f9a9011f0a076084511e1602d021bc5e1fb2465cf51e5b2037687a0bba31f811",
+  ]
+}
+
+provider "registry.terraform.io/hashicorp/random" {
+  version = "3.1.0"
+  hashes = [
+    "h1:rKYu5ZUbXwrLG1w81k7H3nce/Ys6yAxXhWcbtk36HjY=",
+    "zh:2bbb3339f0643b5daa07480ef4397bd23a79963cc364cdfbb4e86354cb7725bc",
+    "zh:3cd456047805bf639fbf2c761b1848880ea703a054f76db51852008b11008626",
+    "zh:4f251b0eda5bb5e3dc26ea4400dba200018213654b69b4a5f96abee815b4f5ff",
+    "zh:7011332745ea061e517fe1319bd6c75054a314155cb2c1199a5b01fe1889a7e2",
+    "zh:738ed82858317ccc246691c8b85995bc125ac3b4143043219bd0437adc56c992",
+    "zh:7dbe52fac7bb21227acd7529b487511c91f4107db9cc4414f50d04ffc3cab427",
+    "zh:a3a9251fb15f93e4cfc1789800fc2d7414bbc18944ad4c5c98f466e6477c42bc",
+    "zh:a543ec1a3a8c20635cf374110bd2f87c07374cf2c50617eee2c669b3ceeeaa9f",
+    "zh:d9ab41d556a48bd7059f0810cf020500635bfc696c9fc3adab5ea8915c1d886b",
+    "zh:d9e13427a7d011dbd654e591b0337e6074eef8c3b9bb11b2e39eaaf257044fd7",
+    "zh:f7605bd1437752114baf601bdf6931debe6dc6bfe3006eb7e9bb9080931dca8a",
+  ]
+}
diff --git a/terraform/terraform-remote-state/main.tf b/terraform/terraform-remote-state/main.tf
new file mode 100644
index 0000000..df818c0
--- /dev/null
+++ b/terraform/terraform-remote-state/main.tf
@@ -0,0 +1,18 @@
+terraform {
+  required_version = ">=0.12"
+  required_providers {
+    azurerm = {
+      source = "hashicorp/azurerm"
+      version = "~>2.84.0"
+    }
+  }
+}
+
+provider "azurerm" {
+  features {}
+}
+
+resource "azurerm_resource_group" "rg" {
+  name      = "StateResource"
+  location  = var.location
+}
diff --git a/terraform/terraform-remote-state/storage.tf b/terraform/terraform-remote-state/storage.tf
new file mode 100644
index 0000000..cea9c17
--- /dev/null
+++ b/terraform/terraform-remote-state/storage.tf
@@ -0,0 +1,18 @@
+resource "azurerm_storage_account" "storageAccount" {
+    name                     = "couplemgmtstates"
+    resource_group_name      = azurerm_resource_group.rg.name
+    location                 = azurerm_resource_group.rg.location
+    account_tier             = "Standard"
+    account_replication_type = "LRS"
+    account_kind             = "StorageV2"
+    access_tier              = "Hot"
+    allow_blob_public_access = true
+
+    timeouts {}
+}
+
+resource "azurerm_storage_container" "storageContainer" {
+  name                  = "tfstates"
+  storage_account_name  = azurerm_storage_account.storageAccount.name
+  container_access_type = "blob"
+}
\ No newline at end of file
diff --git a/terraform/terraform-remote-state/variables.tf b/terraform/terraform-remote-state/variables.tf
new file mode 100644
index 0000000..fb369c9
--- /dev/null
+++ b/terraform/terraform-remote-state/variables.tf
@@ -0,0 +1,6 @@
+# Shortnames for regions can be found here:
+# https://github.com/claranet/terraform-azurerm-regions/blob/master/REGIONS.md
+variable "location" {
+  default = "southeastasia"
+  description   = "Location of the resource group."
+}
\ No newline at end of file
