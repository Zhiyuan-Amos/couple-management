name: Terraform Create Azure Resource

on:
  push:
    branches:
      - master
  pull_request:
    branches: 
      - master

jobs:
  terraform:
    runs-on: ubuntu-latest
    
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform/terraform-create-resource

      - name: Terraform Validate
        run: terraform validate 
        working-directory: ./terraform/terraform-create-resource

      - name: Terraform Plan
        run: terraform plan -out=./terraform-plan
        working-directory: ./terraform/terraform-create-resource

      - name: Terraform Apply
        run: terraform apply terraform-plan -auto-approve
        working-directory: ./terraform/terraform-create-resource

  run-if-failed:
    runs-on: ubuntu-latest
    needs: [terraform]
    if: failure()

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform/terraform-create-resource

      - name: Terraform Destroy
        run: terraform destroy -out=./terraform-destroy
        working-directory: ./terraform/terraform-create-resource

      - name: Terraform Apply
        run: terraform apply terraform-destroy -auto-approve 
        working-directory: ./terraform/terraform-create-resource
