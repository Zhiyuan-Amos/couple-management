name: Deploy DotNet project

on:
  push:
    branches:
      - master
  pull_request:
    branches: 
      - master

jobs:
  terraform-create:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform/terraform-create-resource

    outputs:
      AZURE_RESOURCEGROUP_NAME: ${{ steps.getResourceGroupName.outputs.rgName }}
      
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Azure CLI login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Prep TF environment variables
        env: 
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
        run: |
          $servicePrincipal = ${{ fromJSON(env.AZURE_CREDENTIALS) }}
          echo "ARM_CLIENT_ID=$servicePrincipal.clientId" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=$servicePrincipal.clientSecret" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=$servicePrincipal.subscriptionID" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=$servicePrincipal.tenantId" >> $GITHUB_ENV

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate 

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Get Resource Group name
        id: getResourceGroupName
        run: |
          echo "::set-output name=rgName::$(terraform output -raw rgName)"
  
  fa-build-and-deploy:
    needs: terraform-create
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      AZURE_FUNCTIONAPP_NAME: test-change-event
      AZURE_FUNCTIONAPP_PACKAGE_PATH: 'Messaging'
      DOTNET_VERSION: '6.0.x'
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v2

      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 'Resolve Project Dependencies Using Dotnet'
        shell: bash
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd

      - name: Azure CLI login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Get Pubilsh Profile
        id: getPublishProfile
        run: |
          echo "::set-output name=PUBLISH_PROFILE::$(az webapp deployment list-publishing-profiles -g '${{ needs.terraform-create.outputs.AZURE_RESOURCEGROUP_NAME }}' -n '${{ env.AZURE_FUNCTIONAPP_NAME }}' --xml)"
        
      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
          publish-profile: ${{ steps.getPublishProfile.outputs.PUBLISH_PROFILE }}